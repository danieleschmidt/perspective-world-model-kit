[tox]
envlist = py{39,310,311,312}, lint, type, security, docs
isolated_build = true
skip_missing_interpreters = true

[testenv]
deps = 
    pytest>=7.0.0
    pytest-cov>=4.0.0
    pytest-xdist>=3.0.0
    pytest-mock>=3.11.0
    pytest-timeout>=2.1.0
    hypothesis>=6.82.0
extras = test
commands = 
    pytest {posargs:tests} -x --cov --cov-report=term-missing

[testenv:py39]
basepython = python3.9

[testenv:py310]  
basepython = python3.10

[testenv:py311]
basepython = python3.11

[testenv:py312]
basepython = python3.12

[testenv:lint]
deps = 
    black>=23.0.0
    flake8>=6.0.0
    isort>=5.12.0
    ruff>=0.1.0
commands =
    black --check --diff pwmk tests
    isort --check-only --diff pwmk tests  
    flake8 pwmk tests
    ruff check pwmk tests

[testenv:format]
deps = 
    black>=23.0.0
    isort>=5.12.0
commands =
    black pwmk tests
    isort pwmk tests

[testenv:type]
deps = 
    mypy>=1.5.0
    types-pyyaml
    types-requests
extras = dev
commands = 
    mypy pwmk --ignore-missing-imports

[testenv:security]
deps =
    bandit[toml]>=1.7.5
    safety>=2.3.0
    semgrep>=1.45.0
commands =
    bandit -r pwmk -ll
    safety check --json
    semgrep --config=auto pwmk

[testenv:docs]
deps = 
    sphinx>=7.0.0
    sphinx-rtd-theme>=1.3.0
    myst-parser>=2.0.0
    sphinx-autodoc-typehints>=1.24.0
extras = docs  
commands =
    sphinx-build -W -b html docs docs/_build/html
    sphinx-build -W -b doctest docs docs/_build/doctest

[testenv:docs-serve]
deps = {[testenv:docs]deps}
extras = docs
commands =
    sphinx-autobuild docs docs/_build/html --host 0.0.0.0 --port 8000

[testenv:benchmark]
deps = 
    pytest-benchmark>=4.0.0
    matplotlib>=3.5.0
commands =
    pytest tests/benchmarks -v --benchmark-only --benchmark-sort=mean

[testenv:integration]
deps = {[testenv]deps}
    docker-compose>=1.29.0
commands =
    pytest tests/integration -v --tb=short

[testenv:coverage]  
deps = 
    coverage[toml]>=7.0.0
    pytest-cov>=4.0.0
commands =
    coverage erase
    coverage run -m pytest tests
    coverage report --show-missing --fail-under=80
    coverage html
    coverage xml

[testenv:clean]
deps = coverage
skip_install = true  
commands = 
    coverage erase
    python -c "import shutil; shutil.rmtree('htmlcov', ignore_errors=True)"
    python -c "import shutil; shutil.rmtree('.coverage.*', ignore_errors=True)"
    python -c "import shutil; shutil.rmtree('__pycache__', ignore_errors=True)"
    python -c "import shutil; shutil.rmtree('.pytest_cache', ignore_errors=True)"
    python -c "import shutil; shutil.rmtree('.mypy_cache', ignore_errors=True)"

[testenv:gpu]
deps = {[testenv]deps}
extras = test
passenv = CUDA_VISIBLE_DEVICES
commands = 
    pytest tests -m gpu -v --tb=short

[testenv:research]
deps = {[testenv]deps}
    jupyter>=1.0.0
    notebook>=7.0.0
commands =
    pytest tests -m research -v --tb=short

# Configuration sections
[flake8]
max-line-length = 88
select = E,W,F,C,B
extend-ignore = E203,E501,W503,B008,B011
exclude = 
    .git,
    __pycache__,
    .tox,
    .eggs,
    *.egg,
    build,
    dist,
    .venv,
    venv

[coverage:run]
source = pwmk
branch = true
omit = 
    */tests/*
    */test_*.py
    */__pycache__/*

[coverage:report] 
precision = 2
show_missing = true
skip_covered = false
exclude_lines =
    pragma: no cover
    def __repr__
    raise NotImplementedError
    if __name__ == .__main__.:
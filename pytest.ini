[pytest]
# Pytest configuration for comprehensive testing
minversion = 7.0
testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Test discovery patterns
addopts = 
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --cov=pwmk
    --cov-report=term-missing:skip-covered
    --cov-report=html:htmlcov
    --cov-report=xml:coverage.xml
    --cov-branch
    --cov-fail-under=50
    --durations=10
    --maxfail=5

# Test markers for categorization
markers =
    unit: Unit tests (fast, isolated)
    integration: Integration tests (slower, external dependencies)
    e2e: End-to-end tests (slow, full system)
    gpu: Tests requiring GPU acceleration
    slow: Slow tests (> 10 seconds)
    benchmark: Performance benchmark tests
    unity: Tests requiring Unity ML-Agents
    prolog: Tests requiring Prolog/ASP backend
    research: Research validation tests
    flaky: Tests known to be flaky (retry on failure)
    network: Tests requiring network access
    
# Filterwarnings to manage external library warnings
filterwarnings =
    error
    ignore::UserWarning:torch.*
    ignore::DeprecationWarning:gymnasium.*
    ignore::DeprecationWarning:pettingzoo.*
    ignore::FutureWarning:numpy.*
    ignore::PendingDeprecationWarning:matplotlib.*
    ignore:.*imp module.*:DeprecationWarning
    ignore:.*distutils.*:DeprecationWarning
    
# Test timeout configuration  
# timeout = 300
# timeout_method = thread

# Parallel execution
# xvfb_width = 1920
# xvfb_height = 1080
# xvfb_colordepth = 24

# Coverage configuration
[coverage:run]
source = pwmk
omit = 
    */tests/*
    */test_*.py
    */__pycache__/*
    */migrations/*
    */venv/*
    */virtualenv/*
    */.tox/*
    */setup.py
    */conftest.py

[coverage:report]
exclude_lines =
    pragma: no cover  
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod
    # Type checking blocks
    if TYPE_CHECKING:
    @overload
    
precision = 2
show_missing = true
skip_covered = false
sort = Cover

[coverage:html]
directory = htmlcov
title = PWMK Test Coverage Report

[coverage:xml]
output = coverage.xml